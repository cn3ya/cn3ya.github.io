---
layout: post
title:  "设计模式"
date:   2015-09-06 13:21:30
categories: kong
---

### 六大原则

| 原则                  | 说明                                                           |
|:---------------------|:--------------------------------------------------------------|
| 单一原则(SRP)         | 一个类只做一件事                                                 |
| 开放-封闭原则(OCP)     | 软件实体（类、模块、函数）可以拓展，但是不可修改                        |
| 依赖倒转原则(DIP)      | 高层模块不应该依赖底层，两个都应该依赖抽象。抽象不应该依赖细节，细节依赖抽象 |
| 里氏代换原则(LSP)      | 子类型必须能够替换掉它们的父类型                                     |
| 迪米特法则(LoD)        | 如果两个类不必直接通信，可通过第三者发起这个调用                        |
| 合成/聚合复用原则(CARP) | 尽量使用合成/聚合，尽量不要使用类继承                                |

### 创建型模式

| item | 描述        |                                      |
|:-----|:-----------|:-------------------------------------|
|      | 工厂方法模式 | 创建同一个类,不同属性                    |
|      | 抽象工厂模式 | 创建不同的类                            |
|      | 单例模式     | 全局唯一, 复用                          |
|      | 建造者模式   | 复杂创建过程(条件判断), 如context, sql生成 |
|      | 原型模式     | 拷贝已有类                             |

### 结构型模式

| 类型       | 作用    | 说明     |
|:----------|:-------|:---------|
| Adapter   | 接口适配 | 适配器模式 |
| Facade    | 接口适配 | 外观模式  |
| Bridge    | 接口适配 | 桥接模式  |
| Decorator | 行为扩展 | 装饰器模式 |
| Proxy     | 对象访问 | 代理模式  |
| Flyweight | 对象访问 | 享元模式  |
| Composite | 抽象集合 | 组合模式  |


### 行为型模式

| 类型                     | 作用    | 说明       |
|:------------------------|:-------|:-----------|
| Strategy                | 算法封装 | 策略模式    |
| Template Method         | 算法封装 | 模板方法模式 |
| Command                 | 算法封装 | 命令模式    |
| Mediator                | 对象去耦 | 中介者模式   |
| Observer                | 对象去耦 | 观察者模式   |
| Iteratior               | 抽象集合 | 迭代子模式   |
| Visiter                 | 行为扩展 | 访问者模式   |
| Chain of Responsibility | 行为扩展 | 责任链模式   |
| State                   | 对象状态 | 状态模式    |
|                         |        | 备忘录模式   |
|                         |        | 解释器模式   |
